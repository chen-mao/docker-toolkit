# Copyright (c) 2019-2021, NVIDIA CORPORATION and XDXCT CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ARG BASE_REG
ARG BASE_DIST
ARG GOLANG_VERSION=x.x.x
ARG VERSION="N/A"

# NOTE: In cases where the libc version is a concern, we would have to use an
# image based on the target OS to build the golang executables here -- especially
# if cgo code is included.
FROM golang:${GOLANG_VERSION} as build

# We override the GOPATH to ensure that the binaries are installed to
# /artifacts/bin
ARG GOPATH=/artifacts

WORKDIR /build
COPY . .

# 在构建过程中向 Go 编译器传递链接器标志
# -s: 这个标志告诉链接器从二进制文件中去除调试信息，从而减小二进制文件的大小。
# -w: 这个标志告诉链接器从二进制文件中去除 DWARF 符号信息，进一步减小二进制文件的大小。
# -X 'main.Version=${VERSION}': 这个标志将一个名为 main.Version 的字符串变量设置为 ${VERSION} 指定的值。这在构建过程中将版本信息嵌入到二进制文件中。
# ... 是一个通配符，递归地匹配任意深度的子目录。tools 目录及其子目录下的所有 Go 包
RUN GOPATH=/artifacts go install -ldflags="-s -w -X 'main.Version=${VERSION}'" ./tools/...

FROM ${BASE_REG}/centos:base-${BASE_DIST}

ENV XDXCT_DISABLE_REQUIRE="true"
ENV XDXCT_VISIBLE_DEVICES=all
ENV XDXCT_DRIVER_CAPABILITIES=utility

ARG ARTIFACTS_ROOT
ARG PACKAGE_DIST
COPY ${ARTIFACTS_ROOT}/${PACKAGE_DIST} /artifacts/packages/${PACKAGE_DIST}

WORKDIR /artifacts/packages

ARG PACKAGE_VERSION
ARG TARGETARCH
ENV PACKAGE_ARCH ${TARGETARCH}
# RUN PACKAGE_ARCH=${PACKAGE_ARCH/amd64/x86_64} && PACKAGE_ARCH=${PACKAGE_ARCH/arm64/aarch64} && \
#     yum localinstall -y \
#     ${PACKAGE_DIST}/${PACKAGE_ARCH}/libxdxct-container1-1.*.rpm \
#     ${PACKAGE_DIST}/${PACKAGE_ARCH}/libxdxct-container-tools-1.*.rpm \
#     ${PACKAGE_DIST}/${PACKAGE_ARCH}/xdxct-container-toolkit*-${PACKAGE_VERSION}*.rpm
# COPY build/container/xdxct-container-runtime-1.0.0~rc.1-0.x86_64.rpm .
RUN yum localinstall -y ${PACKAGE_DIST}/${PACKAGE_ARCH}/xdxct-container-runtime-1.0.0~rc.1-0.x86_64.rpm

# RUN yum localinstall -y xdxct-container-runtime-1.0.0~rc.1-0.x86_64.rpm

WORKDIR /work

COPY --from=build /artifacts/bin /work

ENV PATH=/work:$PATH

LABEL io.k8s.display-name="XDXCT Container Runtime Config"
LABEL name="XDXCT Container Runtime Config"
LABEL vendor="XDXCT"
LABEL version="${VERSION}"
LABEL release="N/A"
LABEL summary="Automatically Configure your Container Runtime for GPU support."
LABEL description="See summary"

# RUN mkdir /licenses && mv /NGC-DL-CONTAINER-LICENSE /licenses/NGC-DL-CONTAINER-LICENSE

ENTRYPOINT ["/bin/bash"]
